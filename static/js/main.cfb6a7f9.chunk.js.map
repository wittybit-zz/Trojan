{"version":3,"sources":["PathfindingVisualizer/Node/Node.jsx","PathfindingVisualizer/ListItems.js","algorithms/dijkstra.js","PathfindingVisualizer/Todo.js","App.js","serviceWorker.js","index.js"],"names":["Node","this","props","col","isFinish","isStart","isWall","row","onMouseDown","onMouseEnter","onMouseUp","extraClassName","id","className","Component","ListItems","listItems","items","map","item","key","onClick","deleteItem","text","type","value","icon","duration","easing","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","library","add","faLocationArrow","Todo","state","mouseIsPressed","currentItem","addItem","bind","handleInput","setUpdate","getInitialGrid","setState","nodesInShortestPathOrder","i","setTimeout","animateShortestPath","document","getElementById","j","sr","sc","er","ec","currentNode","unshift","getNodesInShortestPathOrder","animateDijkstra","e","preventDefault","clear","newItem","componentDidMount","target","Date","now","console","log","products","hasOwnProperty","targetCell","targetRow","targetCol","FINISH_NODE_ROW","FINISH_NODE_COL","visualizeDijkstra","onSubmit","placeholder","onChange","rowIdx","nodeIdx","React","currentRow","createNode","obj","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","createWall","includes","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfb6a7f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './Node.css';\n\nexport default class Node extends Component {\n  render() {\n    const {\n      col,\n      isFinish,\n      isStart,\n      isWall,\n      onMouseDown,\n      onMouseEnter,\n      onMouseUp,\n      row,\n    } = this.props;\n    const extraClassName = isFinish\n      ? 'node-finish'\n      : isStart\n        ? 'node-start'\n        : isWall\n          ? 'node-wall'\n          : '';\n\n    return (\n      <div\n        id={`node-${row}-${col}`}\n        className={`node ${extraClassName}`}\n      // onMouseDown={() => onMouseDown(row, col)}\n      // onMouseEnter={() => onMouseEnter(row, col)}\n      // onMouseUp={() => onMouseUp()}\n      >\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p onClick={() => {\r\n                props.deleteItem(item.text)\r\n            }}>\r\n                <input type=\"text\" id={item.key} value={item.text}\r\n                />\r\n                <span className=\"map-icon\">\r\n\r\n                    <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n                        props.deleteItem(item.text)\r\n                    }} icon=\"location-arrow\" />\r\n                </span>\r\n            </p>\r\n\r\n        </div>\r\n    })\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n            {listItems}\r\n        </FlipMove>\r\n\r\n    </div>;\r\n}\r\n\r\nexport default ListItems;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import React from 'react';\nimport Node from './Node/Node';\nimport './Todo.css';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faLocationArrow } from '@fortawesome/free-solid-svg-icons'\nimport { dijkstra, getNodesInShortestPathOrder } from '../algorithms/dijkstra';\n\nimport './PathfindingVisualizer.css';\n\n\n\nlibrary.add(faLocationArrow)\n\nvar START_NODE_ROW = 2;\nvar START_NODE_COL = 4;\nvar FINISH_NODE_ROW = 11;\nvar FINISH_NODE_COL = 4;\n\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      mouseIsPressed: false,\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    const grid = getInitialGrid();\n\n    this.setState({ grid });\n  }\n\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-visited';\n      }, 10 * i);\n    }\n  }\n  clear() {\n    for (let i = 0; i < 20; i++) {\n      for (let j = 0; j < 50; j++)\n        if (document.getElementById(`node-${i}-${j}`).className === 'node node-visited' || document.getElementById(`node-${i}-${j}`).className === 'node node-shortest-path') {\n\n          document.getElementById(`node-${i}-${j}`).className = 'node';\n\n        }\n    }\n  }\n\n\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length - 1; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        document.getElementById(`node-${node.row}-${node.col}`).className =\n          'node node-shortest-path';\n      }, 50 * i);\n    }\n\n  }\n\n  visualizeDijkstra(sr, sc, er, ec) {\n    const { grid } = this.state;\n    const startNode = grid[sr][sc];\n    const finishNode = grid[er][ec];\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    // document.querySelector(\".node-start\").classList.remove('node-start');\n    // document.querySelector(`#node-${FINISH_NODE_ROW}-${FINISH_NODE_COL}`).classList.add('node-start');\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    this.clear();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    this.componentDidMount();\n    this.clear();\n\n  }\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n\n      }\n    })\n\n    // var products = {\n    //   'sugar': [35, 4],\n    //   'milk': [45, 4],\n    //   'banana': [42, 13],\n    //   'soap': [18, 3],\n    //   'phone': [16, 13],\n    //   'laptop': [23, 16],\n    //   'socks': [32, 15],\n    //   'pen': [12, 9]\n    // };\n\n    // if (products.hasOwnProperty(e.target.value)) {\n\n    //   var targetCell = products[e.target.value];\n    //   var targetRow = targetCell[1];\n    //   var targetCol = targetCell[0];\n    //   console.log(targetRow);\n    //   console.log(targetCol);\n    //   console.log(targetCell);\n\n\n    // }\n\n  }\n  deleteItem(text) {\n    this.clear();\n    console.log(text);\n    var products = {\n      'sugar': [35, 4],\n      'milk': [45, 4],\n      'banana': [42, 13],\n      'soap': [18, 3],\n      'phone': [16, 13],\n      'laptop': [23, 16],\n      'socks': [32, 15],\n      'pen': [12, 9]\n    };\n    if (products.hasOwnProperty(text)) {\n\n      var targetCell = products[text];\n      var targetRow = targetCell[1];\n      var targetCol = targetCell[0];\n      console.log(\"delete\");\n      console.log(targetRow);\n      console.log(targetCol);\n      console.log(targetCell);\n      var FINISH_NODE_ROW = targetRow;\n      var FINISH_NODE_COL = targetCol;\n      this.visualizeDijkstra(START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL);\n\n    }\n\n\n  }\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key)\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n\n\n\n  }\n\n\n\n  render() {\n    const { grid } = this.state;\n    return (\n      <>\n        <div className=\"Todo\">\n          <header>\n            <h1 className=\"top-head\">Shopping List</h1>\n            <form id=\"to-do-form\" onSubmit={this.addItem}>\n              <input type=\"text\" placeholder=\"Enter Item\" value={this.state.currentItem.text} onChange={this.handleInput}></input>\n              <button className=\"add\" type=\"submit\">Add</button>\n            </form>\n            <p>{this.state.items.text}</p>\n\n            <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\n            <span className=\"instruction\" >Searchable Items: sugar, milk, banana, soap, phone, laptop, socks, pen</span>\n\n          </header>\n\n        </div>\n        {/* <button onClick={() => this.visualizeDijkstra(START_NODE_ROW, START_NODE_COL, FINISH_NODE_ROW, FINISH_NODE_COL)}>\n          Visualize Dijkstra's Algorithm\n        </button> */}\n        <div className=\"grid\">\n          {grid.map((row, rowIdx) => {\n            return (\n              <div key={rowIdx}>\n                {row.map((node, nodeIdx) => {\n                  const { row, col, isFinish, isStart, isWall } = node;\n                  return (\n                    <Node\n                      key={nodeIdx}\n                      col={col}\n                      isFinish={isFinish}\n                      isStart={isStart}\n                      isWall={isWall}\n                      // mouseIsPressed={mouseIsPressed}\n                      // onMouseDown={(row, col) => this.handleMouseDown(row, col)}\n                      // onMouseEnter={(row, col) =>\n                      //   this.handleMouseEnter(row, col)\n                      // }\n                      // onMouseUp={() => this.handleMouseUp()}\n                      row={row}></Node>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\nconst getInitialGrid = () => {\n  const grid = [];\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(createNode(col, row));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n};\nvar obj = {\n  4: [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18],\n  5: [1, 14, 18],\n  6: [1, 14, 15, 16, 18],\n  7: [1, 16, 18],\n  8: [1, 16, 18],\n  9: [1, 16, 18],\n  10: [1, 3, 4, 5, 6, 7, 10, 12, 16, 18],\n  11: [1, 10, 12, 16, 18],\n  12: [1, 10, 12, 16, 18],\n  13: [1, 3, 4, 5, 6, 7, 10, 12, 16, 17, 18],\n  14: [1, 18],\n  15: [1, 18],\n  16: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  17: [1, 10, 12, 18],\n  18: [1, 10, 12, 18],\n  19: [1, 3, 4, 5, 6, 7, 10, 12, 18],\n  20: [1, 18],\n  21: [1, 18],\n  22: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  23: [1, 10, 12, 18],\n  24: [1, 10, 12, 18],\n  25: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  26: [1, 18],\n  27: [1, 18],\n  28: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  29: [1, 10, 12, 18],\n  30: [1, 10, 12, 18],\n  31: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  32: [1, 18],\n  33: [1, 18],\n  34: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  35: [1, 10, 12, 18],\n  36: [1, 10, 12, 18],\n  37: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  38: [1, 18],\n  39: [1, 18],\n  40: [1, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18],\n  41: [1, 10, 12, 18],\n  42: [1, 10, 12, 18],\n  43: [1, 10, 12, 18],\n  44: [1, 18],\n  45: [1, 18],\n  46: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18],\n  47: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n}\nfunction createWall(obj, key, value) {\n  return obj.hasOwnProperty(key) && obj[key].includes(value);\n}\n\nconst createNode = (col, row) => {\n  return {\n    col,\n    row,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isFinish: row === FINISH_NODE_ROW && col === FINISH_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: (createWall(obj, col, row)) ? true : false,\n    previousNode: null,\n  };\n};\n\n\n\n\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall,\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\nexport default Todo;\n","import React from 'react';\nimport './App.css';\n\nimport Todo from './PathfindingVisualizer/Todo';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo></Todo>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}